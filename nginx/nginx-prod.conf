upstream client {
  server client-prod:3000;
}

upstream api {
  server server-prod:5000;
}

# 공통 헤더 설정 (proxy_pass 용)
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;

server {
  listen      80;
  listen      [::]:80;
  server_name uyeong.com www.uyeong.com;

  # 인증 파일 저장 경로 설정
  location /.well-known/acme-challenge {
    allow all; # 위 경로의 모든 클라이언트 접근 허용
    root  /var/www/certbot;
  }

  # http 요청을 https 로 리다이렉트
  return      301 https://$host$request_uri;
}

server {
  listen                    443 ssl;
  listen                    [::]:443 ssl;
  http2                     on;
  server_name               uyeong.com www.uyeong.com;
  # 응답 헤더에서 Nginx 서버 버전 제거
  server_tokens             off;
  # ssl 인증서
  ssl_certificate           /etc/letsencrypt/live/uyeong.com/fullchain.pem; # Public Key (서버 인증서 + 중간 인증서) (Client에 전송)
  ssl_certificate_key       /etc/letsencrypt/live/uyeong.com/privkey.pem; # Private Key
  ssl_trusted_certificate   /etc/letsencrypt/live/uyeong.com/chain.pem; # OCSP Stapling 용 CA 인증서 (중간 인증서)
  # SSL/TLS 연결 보안 강화
  ssl_dhparam               /etc/ssl/certs/dhparams-2048.pem;
  # 지원할 TLS 프로토콜
  ssl_protocols             TLSv1.3 TLSv1.2;
  # 암호화 스위트(암호화 알고리즘)
  ssl_prefer_server_ciphers on; # server 쪽 암호화 알고리즘 사용
  ssl_ciphers               HIGH:!aNULL:!MD5; # 사용할 암호화 알고리즘 지정
  # 인증서 상태 확인
  ssl_stapling              on; # 빠른 인증서 상태 확인
  ssl_stapling_verify       on; # OCSP 응답 유효성 확인
  resolver                  8.8.8.8 8.8.4.4; # Google DNS로 인증서 상태 확인
  # 기타 보안 강화
  ssl_ecdh_curve            secp384r1; # SSL/TLS 키 교환 암호화 강도 향상
  ssl_session_tickets       off; # 이전 세션 복호화 위험 방지

  location / {
    proxy_pass http://client;
  }

  location /api/ {
    proxy_pass http://api;
  }
}